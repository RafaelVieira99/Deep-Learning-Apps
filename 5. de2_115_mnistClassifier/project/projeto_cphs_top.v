
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module projeto_cphs_top(

	//////////// CLOCK //////////
	CLOCK_50,
	CLOCK2_50,
	CLOCK3_50,

	//////////// Sma //////////
	SMA_CLKIN,
	SMA_CLKOUT,

	//////////// LED //////////
	LEDG,
	LEDR,

	//////////// KEY //////////
	KEY,

	//////////// EX_IO //////////
	EX_IO,

	//////////// SW //////////
	SW,

	//////////// SEG7 //////////
	HEX0,
	HEX1,
	HEX2,
	HEX3,
	HEX4,
	HEX5,
	HEX6,
	HEX7,

//	//////////// LCD //////////
//	LCD_BLON,
//	LCD_DATA,
//	LCD_EN,
//	LCD_ON,
//	LCD_RS,
//	LCD_RW,
//
//	//////////// RS232 //////////
//	UART_CTS,
//	UART_RTS,
//	UART_RXD,
//	UART_TXD,
//
//	//////////// PS2 for Keyboard and Mouse //////////
//	PS2_CLK,
//	PS2_CLK2,
//	PS2_DAT,
//	PS2_DAT2,

	//////////// SDCARD //////////
	SD_CLK,
	SD_CMD,
	SD_DAT,
	SD_WP_N,

	//////////// VGA //////////
	VGA_B,
	VGA_BLANK_N,
	VGA_CLK,
	VGA_G,
	VGA_HS,
	VGA_R,
	VGA_SYNC_N,
	VGA_VS,

//	//////////// Audio //////////
//	AUD_ADCDAT,
//	AUD_ADCLRCK,
//	AUD_BCLK,
//	AUD_DACDAT,
//	AUD_DACLRCK,
//	AUD_XCK,
//
//	//////////// I2C for EEPROM //////////
//	EEP_I2C_SCLK,
//	EEP_I2C_SDAT,
//
//	//////////// I2C for Audio Tv-Decoder  //////////
//	I2C_SCLK,
//	I2C_SDAT,
//
//	//////////// Ethernet 0 //////////
//	ENET0_GTX_CLK,
//	ENET0_INT_N,
//	ENET0_LINK100,
//	ENET0_MDC,
//	ENET0_MDIO,
//	ENET0_RST_N,
//	ENET0_RX_CLK,
//	ENET0_RX_COL,
//	ENET0_RX_CRS,
//	ENET0_RX_DATA,
//	ENET0_RX_DV,
//	ENET0_RX_ER,
//	ENET0_TX_CLK,
//	ENET0_TX_DATA,
//	ENET0_TX_EN,
//	ENET0_TX_ER,
//	ENETCLK_25,
//
//	//////////// Ethernet 1 //////////
//	ENET1_GTX_CLK,
//	ENET1_INT_N,
//	ENET1_LINK100,
//	ENET1_MDC,
//	ENET1_MDIO,
//	ENET1_RST_N,
//	ENET1_RX_CLK,
//	ENET1_RX_COL,
//	ENET1_RX_CRS,
//	ENET1_RX_DATA,
//	ENET1_RX_DV,
//	ENET1_RX_ER,
//	ENET1_TX_CLK,
//	ENET1_TX_DATA,
//	ENET1_TX_EN,
//	ENET1_TX_ER,
//
//	//////////// TV Decoder //////////
//	TD_CLK27,
//	TD_DATA,
//	TD_HS,
//	TD_RESET_N,
//	TD_VS,
//
//	//////////// USB 2.0 OTG (Cypress CY7C67200) //////////
//	OTG_ADDR,
//	OTG_CS_N,
//	OTG_DATA,
//	OTG_INT,
//	OTG_RD_N,
//	OTG_RST_N,
//	OTG_WE_N,

	//////////// IR Receiver //////////
//	IRDA_RXD,

	//////////// SDRAM //////////
	DRAM_ADDR,
	DRAM_BA,
	DRAM_CAS_N,
	DRAM_CKE,
	DRAM_CLK,
	DRAM_CS_N,
	DRAM_DQ,
	DRAM_DQM,
	DRAM_RAS_N,
	DRAM_WE_N,

	//////////// SRAM //////////
	SRAM_ADDR,
	SRAM_CE_N,
	SRAM_DQ,
	SRAM_LB_N,
	SRAM_OE_N,
	SRAM_UB_N,
	SRAM_WE_N,

	//////////// Flash //////////
	FL_ADDR,
	FL_CE_N,
	FL_DQ,
	FL_OE_N,
	FL_RST_N,
	FL_RY,
	FL_WE_N,
	FL_WP_N 
);

//=======================================================
//  PARAMETER declarations
//=======================================================


//=======================================================
//  PORT declarations
//=======================================================

//////////// CLOCK //////////
input 		          		CLOCK_50;
input 		          		CLOCK2_50;
input 		          		CLOCK3_50;

//////////// Sma //////////
input 		          		SMA_CLKIN;
output		          		SMA_CLKOUT;

//////////// LED //////////
output		     [8:0]		LEDG;
output		    [17:0]		LEDR;

//////////// KEY //////////
input 		     [3:0]		KEY;

//////////// EX_IO //////////
inout 		     [6:0]		EX_IO;

//////////// SW //////////
input 		    [17:0]		SW;

//////////// SEG7 //////////
output		     [6:0]		HEX0;
output		     [6:0]		HEX1;
output		     [6:0]		HEX2;
output		     [6:0]		HEX3;
output		     [6:0]		HEX4;
output		     [6:0]		HEX5;
output		     [6:0]		HEX6;
output		     [6:0]		HEX7;

////////////// LCD //////////
//output		          		LCD_BLON;
//inout 		     [7:0]		LCD_DATA;
//output		          		LCD_EN;
//output		          		LCD_ON;
//output		          		LCD_RS;
//output		          		LCD_RW;
//
////////////// RS232 //////////
//input 		          		UART_CTS;
//output		          		UART_RTS;
//input 		          		UART_RXD;
//output		          		UART_TXD;
//
////////////// PS2 for Keyboard and Mouse //////////
//inout 		          		PS2_CLK;
//inout 		          		PS2_CLK2;
//inout 		          		PS2_DAT;
//inout 		          		PS2_DAT2;

//////////// SDCARD //////////
output		          		SD_CLK;
inout 		          		SD_CMD;
inout 		     [3:0]		SD_DAT;
input 		          		SD_WP_N;

//////////// VGA //////////
output		     [7:0]		VGA_B;
output		          		VGA_BLANK_N;
output		          		VGA_CLK;
output		     [7:0]		VGA_G;
output		          		VGA_HS;
output		     [7:0]		VGA_R;
output		          		VGA_SYNC_N;
output		          		VGA_VS;

////////////// Audio //////////
//input 		          		AUD_ADCDAT;
//inout 		          		AUD_ADCLRCK;
//inout 		          		AUD_BCLK;
//output		          		AUD_DACDAT;
//inout 		          		AUD_DACLRCK;
//output		          		AUD_XCK;
//
////////////// I2C for EEPROM //////////
//output		          		EEP_I2C_SCLK;
//inout 		          		EEP_I2C_SDAT;
//
////////////// I2C for Audio Tv-Decoder  //////////
//output		          		I2C_SCLK;
//inout 		          		I2C_SDAT;
//
////////////// Ethernet 0 //////////
//output		          		ENET0_GTX_CLK;
//input 		          		ENET0_INT_N;
//input 		          		ENET0_LINK100;
//output		          		ENET0_MDC;
//inout 		          		ENET0_MDIO;
//output		          		ENET0_RST_N;
//input 		          		ENET0_RX_CLK;
//input 		          		ENET0_RX_COL;
//input 		          		ENET0_RX_CRS;
//input 		     [3:0]		ENET0_RX_DATA;
//input 		          		ENET0_RX_DV;
//input 		          		ENET0_RX_ER;
//input 		          		ENET0_TX_CLK;
//output		     [3:0]		ENET0_TX_DATA;
//output		          		ENET0_TX_EN;
//output		          		ENET0_TX_ER;
//input 		          		ENETCLK_25;
//
////////////// Ethernet 1 //////////
//output		          		ENET1_GTX_CLK;
//input 		          		ENET1_INT_N;
//input 		          		ENET1_LINK100;
//output		          		ENET1_MDC;
//inout 		          		ENET1_MDIO;
//output		          		ENET1_RST_N;
//input 		          		ENET1_RX_CLK;
//input 		          		ENET1_RX_COL;
//input 		          		ENET1_RX_CRS;
//input 		     [3:0]		ENET1_RX_DATA;
//input 		          		ENET1_RX_DV;
//input 		          		ENET1_RX_ER;
//input 		          		ENET1_TX_CLK;
//output		     [3:0]		ENET1_TX_DATA;
//output		          		ENET1_TX_EN;
//output		          		ENET1_TX_ER;
//
////////////// TV Decoder //////////
//input 		          		TD_CLK27;
//input 		     [7:0]		TD_DATA;
//input 		          		TD_HS;
//output		          		TD_RESET_N;
//input 		          		TD_VS;
//
////////////// USB 2.0 OTG (Cypress CY7C67200) //////////
//output		     [1:0]		OTG_ADDR;
//output		          		OTG_CS_N;
//inout 		    [15:0]		OTG_DATA;
//input 		          		OTG_INT;
//output		          		OTG_RD_N;
//output		          		OTG_RST_N;
//output		          		OTG_WE_N;
//
////////////// IR Receiver //////////
//input 		          		IRDA_RXD;

//////////// SDRAM //////////
output		    [12:0]		DRAM_ADDR;
output		     [1:0]		DRAM_BA;
output		          		DRAM_CAS_N;
output		          		DRAM_CKE;
output		          		DRAM_CLK;
output		          		DRAM_CS_N;
inout 		    [31:0]		DRAM_DQ;
output		     [3:0]		DRAM_DQM;
output		          		DRAM_RAS_N;
output		          		DRAM_WE_N;

//////////// SRAM //////////
output		    [19:0]		SRAM_ADDR;
output		          		SRAM_CE_N;
inout 		    [15:0]		SRAM_DQ;
output		          		SRAM_LB_N;
output		          		SRAM_OE_N;
output		          		SRAM_UB_N;
output		          		SRAM_WE_N;

//////////// Flash //////////
output		    [22:0]		FL_ADDR;
output		          		FL_CE_N;
inout 		     [7:0]		FL_DQ;
output		          		FL_OE_N;
output		          		FL_RST_N;
input 		          		FL_RY;
output		          		FL_WE_N;
output		          		FL_WP_N;


//=======================================================
//  REG/WIRE declarations
//=======================================================	

	
	DE2_115_SD_CARD_NIOS u0 (
//		.altpll_areset_conduit_export                                    (  ),//                     altpll_areset_conduit.export
		.altpll_c1_clk                                                   (DRAM_CLK),//                                 altpll_c1.clk
//		.altpll_c3_clk                                                   (VGA_CLK),//                                 altpll_c3.clk
		//.altpll_locked_conduit_export                                    (  ),//                     altpll_locked_conduit.export
//		.c0_out_clk_clk                                                  (  ),//                                c0_out_clk.clk
//		.c2_out_clk_clk                                                  (  ),//                                c2_out_clk.clk
		.clk_50_clk_in_clk                                               ( CLOCK_50 ),//                             clk_50_clk_in.clk
//		.epp_i2c_scl_external_connection_export                          (EEP_I2C_SCLK),//           epp_i2c_scl_external_connection.export
//		.epp_i2c_sda_external_connection_export                          (EEP_I2C_SDAT  ),//           epp_i2c_sda_external_connection.export
//		.i2c_scl_external_connection_export                              ( I2C_SCLK ),//               i2c_scl_external_connection.export
//		.i2c_sda_external_connection_export                              (I2C_SDAT  ),//               i2c_sda_external_connection.export
//		.ir_external_connection_export                                   (IRDA_RXD  ),//                    ir_external_connection.export
		.key_external_connection_export                                  ( KEY ),//                   key_external_connection.export
		.ledg_external_connection_export                                 ( LEDG ),//                  ledg_external_connection.export
		.ledr_external_connection_export                                 ( LEDR ),//                  ledr_external_connection.export
		.reset_reset_n                                                   ( 1'b1 ),//                                     reset.reset_n
		.sd_clk_external_connection_export                               (SD_CLK  ),//                sd_clk_external_connection.export
		.sd_cmd_external_connection_export                               ( SD_CMD ),//                sd_cmd_external_connection.export
		.sd_dat_external_connection_export                               ( SD_DAT ),//                sd_dat_external_connection.export
		.sd_wp_n_external_connection_export                              (SD_WP_N  ),//               sd_wp_n_external_connection.export
		.sw_external_connection_export                                   (SW  ),//                    sw_external_connection.export
		.tri_state_bridge_flash_bridge_0_out_address_to_the_cfi_flash    ( FL_ADDR ),//       tri_state_bridge_flash_bridge_0_out.address_to_the_cfi_flash
		.tri_state_bridge_flash_bridge_0_out_tri_state_bridge_flash_data ( FL_DQ  ),//                                          .tri_state_bridge_flash_data
		.tri_state_bridge_flash_bridge_0_out_write_n_to_the_cfi_flash    ( FL_WE_N ),//                                          .write_n_to_the_cfi_flash
		.tri_state_bridge_flash_bridge_0_out_select_n_to_the_cfi_flash   (FL_CE_N  ),//                                          .select_n_to_the_cfi_flash
		.tri_state_bridge_flash_bridge_0_out_read_n_to_the_cfi_flash     (FL_OE_N  ),//                                          .read_n_to_the_cfi_flash
		.hex0_external_connection_export                 (HEX0), //                  hex0_external_connection.export
		.hex1_external_connection_export                 (HEX1), //                  hex1_external_connection.export
		.hex2_external_connection_export                 (HEX2), //                  hex2_external_connection.export
		.hex3_external_connection_export                 (HEX3), //                  hex3_external_connection.export
		.hex4_external_connection_export                 (HEX4), //                  hex4_external_connection.export
		.hex5_external_connection_export                 (HEX5), //                  hex5_external_connection.export
		.hex6_external_connection_export                 (HEX6), //                  hex6_external_connection.export
		.hex7_external_connection_export                 (HEX7), //                                 (  ),//                  hex1_external_connection.export
//		.character_lcd_0_external_interface_DATA         (LCD_DATA), //        character_lcd_0_external_interface.DATA
//		.character_lcd_0_external_interface_ON           (LCD_ON), //                                          .ON
//		.character_lcd_0_external_interface_BLON         (LCD_BLON), //                                          .BLON
//		.character_lcd_0_external_interface_EN           (LCD_EN), //                                          .EN
//		.character_lcd_0_external_interface_RS           (LCD_RS), //                                          .RS
//		.character_lcd_0_external_interface_RW           (LCD_RW), //                                          .RW
//		.sram_0_external_interface_DQ                    (SRAM_DQ), //                 sram_0_external_interface.DQ
//		.sram_0_external_interface_ADDR                  (SRAM_ADDR), //                                          .ADDR
//		.sram_0_external_interface_LB_N                  (SRAM_LB_N), //                                          .LB_N
//		.sram_0_external_interface_UB_N                  (SRAM_UB_N), //                                          .UB_N
//		.sram_0_external_interface_CE_N                  (SRAM_CE_N), //                                          .CE_N
//		.sram_0_external_interface_OE_N                  (SRAM_OE_N), //                                          .OE_N
//		.sram_0_external_interface_WE_N                  (SRAM_WE_N), //                                          .WE_N
		.video_vga_controller_0_external_interface_CLK   (VGA_CLK), // video_vga_controller_0_external_interface.CLK
		.video_vga_controller_0_external_interface_HS    (VGA_HS), //                                          .HS
		.video_vga_controller_0_external_interface_VS    (VGA_VS), //                                          .VS
		.video_vga_controller_0_external_interface_BLANK (VGA_BLANK_N), //                                          .BLANK
		.video_vga_controller_0_external_interface_SYNC  (VGA_SYNC_N), //                                          .SYNC
		.video_vga_controller_0_external_interface_R     (VGA_R), //                                          .R
		.video_vga_controller_0_external_interface_G     (VGA_G), //                                          .G
		.video_vga_controller_0_external_interface_B     (VGA_B) //                                          .B
	);

//=======================================================
//  Structural coding
//=======================================================



endmodule
